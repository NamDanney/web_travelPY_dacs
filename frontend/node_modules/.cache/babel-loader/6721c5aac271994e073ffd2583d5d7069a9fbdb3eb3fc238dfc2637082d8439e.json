{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB_TRAVEL\\\\my-app\\\\frontend\\\\src\\\\components\\\\LocationDetail\\\\CommentsSection.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsSection = ({\n  comments,\n  setComments,\n  newComment,\n  setNewComment\n}) => {\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      setComments([...comments, {\n        id: Date.now(),\n        text: newComment,\n        date: new Date().toLocaleString()\n      }]);\n      setNewComment(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"comments\",\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"B\\xECnh Lu\\u1EADn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        placeholder: \"Vi\\u1EBFt b\\xECnh lu\\u1EADn c\\u1EE7a b\\u1EA1n...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"G\\u1EEDi B\\xECnh Lu\\u1EADn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0110\\u0103ng v\\xE0o: \", comment.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ch\\u01B0a c\\xF3 b\\xECnh lu\\u1EADn n\\xE0o. H\\xE3y l\\xE0 ng\\u01B0\\u1EDDi \\u0111\\u1EA7u ti\\xEAn b\\xECnh lu\\u1EADn!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentsSection;\nCommentsSection.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired\n  })).isRequired,\n  setComments: PropTypes.func.isRequired,\n  newComment: PropTypes.string.isRequired,\n  setNewComment: PropTypes.func.isRequired\n};\nexport default CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","CommentsSection","comments","setComments","newComment","setNewComment","handleCommentSubmit","e","preventDefault","trim","id","Date","now","text","date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","placeholder","value","onChange","target","type","length","map","comment","_c","propTypes","arrayOf","shape","number","isRequired","string","func","$RefreshReg$"],"sources":["D:/WEB_TRAVEL/my-app/frontend/src/components/LocationDetail/CommentsSection.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nconst CommentsSection = ({ comments, setComments, newComment, setNewComment }) => {\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      setComments([...comments, { id: Date.now(), text: newComment, date: new Date().toLocaleString() }]);\n      setNewComment(\"\");\n    }\n  };\n\n  return (\n    <section id=\"comments\" className=\"comments\">\n      <h2>Bình Luận</h2>\n      <form onSubmit={handleCommentSubmit}>\n        <textarea\n          rows=\"4\"\n          placeholder=\"Viết bình luận của bạn...\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n        >\n          Gửi Bình Luận\n        </button>\n      </form>\n      <div className=\"comment-list\">\n        {comments.length > 0 ? (\n          comments.map((comment) => (\n            <div key={comment.id} className=\"comment\">\n              <p>{comment.text}</p>\n              <p>Đăng vào: {comment.date}</p>\n            </div>\n          ))\n        ) : (\n          <p>Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nCommentsSection.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  setComments: PropTypes.func.isRequired,\n  newComment: PropTypes.string.isRequired,\n  setNewComment: PropTypes.func.isRequired,\n};\n\nexport default CommentsSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}